#* @vtlmacrolibrary path="macro.vm" *#
<input id="picker_value" type="hidden">
<script>
    function editTableFormatter(value,row,index,col) {
        var id=row["_id"];
        var template='<a class="editable_row" href="#" data-name=":name" data-type=":type" data-pk=":id" data-url=":url">:value</a>'
        return template.replace(":name",col).replace(":type","text").replace(":id",id).replace(":url",rootPath+"/spring/data/search/update/$esc.javascript($view.name)").replace(":value",value);
    }
    function bindTheMethod(){};
    #if($view.change)
        #set($changeType={})
        #foreach($item in $view.fields)
            #set($ten=$changeType.put($item.name,$util.getComponentByType($item.type)))
        #end
        function bindTheMethod() {
        #foreach($item in $view.change)
                #if ($msg.isNull($item.type)||$!{item.type}== 'cascade')
                    //jQuery("#"+"$esc.javascript($msg.escapeName($item.name))").unbind("change");
                    jQuery("#"+"$esc.javascript($msg.escapeName($item.name))").bind("change",function (e){
                        var value=jQuery("#"+"$esc.javascript($msg.escapeName($item.name))").val();
                        jQuery.ajax({
                            url: "$request.contextPath/spring/data/change/$esc.javascript($view.name)/$esc.javascript($item.target)",
                            type: "post",
                            data: jQuery("form").serialize()
                        }).success(function (data){
                            #set($tem1=$changeType.get("$esc.javascript($item.target)"))
                            #if($tem1.customOnChangeTemplate)
                                #parse($tem1.customOnChangeTemplate)
                            #end

                        })
                    })
                #end
                #if (${item.type}== 'toggle')
                    jQuery("#"+"$esc.javascript($msg.escapeName($item.name))").bind("change",function (e){
                        jQuery("#"+"$esc.javascript($msg.escapeName($item.target))").closest('.form-group,.subview').toggle(jQuery.inArray(jQuery("#"+"$esc.javascript($msg.escapeName($item.name))").val(),'#if($item.value)$esc.javascript($item.value)#end'.split(","))>=0);
                    })

                #end



        #end
        }
        function unbindTheMethod() {
            #foreach($item in $view.change)
                #if ($msg.isNull($item.type)||$!{item.type}== 'cascade')
                    jQuery("#"+"$esc.javascript($msg.escapeName($item.name))").unbind("change");
                #end
            #end
        }

    #end
    jQuery(document).ready(function(){
    #foreach($item in $view.change)
        #if (${item.type}== 'toggle')
            jQuery("#"+"$esc.javascript($msg.escapeName($item.target))").closest('.form-group,.subview').toggle(jQuery.inArray(jQuery("#"+"$esc.javascript($msg.escapeName($item.name))").val(),'#if($item.value)$esc.javascript($item.value)#end'.split(","))>=0);
        #end

    #end
    #if($viewContext.hasFieldType("autocomplete"))
       jQuery("input[data-autocomplete=true]").autocomplete({

           source :function(request, response){
               var el=this.element;
               var url=rootPath+"/spring/data/autocomplete/"+el.data("view")+"/"+el.data("field");
               jQuery.ajax({
                   url:url,
                   data:jQuery("form").serialize(),
                   dataType: "json",
                   success:function(data){
                       response(data)
                   },
                   fail: function(){
                       response()
                   }
               })
           },
           delay: 500,
           html:"html"
       })
    #end


    })
</script>
